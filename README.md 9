Certainly! Here's an example of a custom modal window using HTML, CSS, and JavaScript. It includes a button to open the modal, the ability to close the modal by clicking outside or using a close button, and the disabling of scrolling when the modal is open.

HTML:

<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
  <button id="openModalBtn">Open Modal</button>

  <div id="myModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>Modal Title</h2>
      <p>This is the modal content.</p>
    </div>
  </div>

  <script src="script.js"></script>
</body>
</html>

CSS (styles.css):

.modal {
  display: none;
  position: fixed;
  z-index: 9999;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.6);
}

.modal-content {
  background-color: #fefefe;
  margin: 10% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
  max-width: 500px;
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

body.modal-open {
  overflow: hidden;
}

JavaScript (script.js):

var openModalBtn = document.getElementById('openModalBtn');
var modal = document.getElementById('myModal');
var closeModalBtn = modal.getElementsByClassName('close')[0];

openModalBtn.addEventListener('click', function() {
  modal.style.display = 'block';
  document.body.classList.add('modal-open');
});

closeModalBtn.addEventListener('click', function() {
  modal.style.display = 'none';
  document.body.classList.remove('modal-open');
});

window.addEventListener('click', function(event) {
  if (event.target === modal) {
    modal.style.display = 'none';
    document.body.classList.remove('modal-open');
  }
});
This code creates a custom modal window. The CSS sets the styles for the modal and its content, including the close button. The JavaScript code handles the opening and closing of the modal. When the "Open Modal" button is clicked, the modal is displayed and the body of the document gets the class "modal-open" to disable scrolling. Clicking on the close button or outside the modal window closes the modal and removes the "modal-open" class to enable scrolling.

Save the HTML, CSS, and JavaScript code in separate files (e.g., index.html, styles.css, script.js), and open the HTML file in a web browser to see the custom modal window in action. Feel free to modify the styles and content of the modal to fit your needs.





